% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class_Dyadic.R
\docType{class}
\name{Dyadic-class}
\alias{Dyadic-class}
\title{The class to represent a dyadic matrix}
\value{
running \code{new("Dyadic")} return an object that belongs to the class \code{Dyadic},
with the initialization of the default values for the fields.
}
\description{
The main class in the \code{Dyadic}-package used for representing three types of dyadic matrices: horizontal, vertical,
symmetric, and asymmetric.
}
\section{Slots}{

\describe{
\item{\code{height}}{positive integer, the number of dyadic levels;}

\item{\code{breadth}}{positive integer, the breadth of the dyadic structure;}

\item{\code{type}}{string, one of the following character strings: \code{horiz},\code{vert},\code{symm}, \code{asymm} which
indicates the type of dyadic matrix
\itemize{
    \item \code{horiz} horizontal,
    \item \code{vert} vertical,
    \item \code{symm} symmetric,
    \item \code{asymm} asymmetric,
}
where the last two types distinguish symmetrically dyadic matrices (they both have symmetric dyadic structure)
that correspond to symmetric or not symmetric matrices.}

\item{\code{entries}}{list (of matrices); a list of the length \code{height} containing
\code{(2^(l)-1)*breadth x 2^(height-l)*breadth} matrices, where \code{l} is the index running through the list.
Each matrix in the list includes the entries corresponding to
\code{2^(height-l)} \code{(2^l-1)*breadth x breadth}-matrices
put side by side columnwise in the \code{l}th level of a dyadic structure.    In the 'symm'- and 'asymm'-cases, the terms below
diagonal on the diagonal blocks are set to zero.}

\item{\code{aentries}}{list (of matrices); a list which is either empty if the slot \code{type} is not \code{'asymm'}
or of the length \code{height} otherwise, in which the case it contains
\code{(2^(l)-1)*breadth x 2^(height-l)*breadth} matrices, where \code{l} is the index running through the list.
Each matrix in the list includes the entries corresponding to \code{2^(height-l)}.
\code{(2^l-1)*breadth x breadth}-matrices
put side by side columnwise in the \code{l}th horizontal level of an asymmetric dyadic structure.
The terms above and on the diagonal in the diagonal blocks are set to zero because they are accounted in the slot \code{entries}.}
}}

\section{References}{

Kos, M., Podg\eqn{\mbox{\'o}}{o}rski, K., Wu, H. (2024) "Sparse"
}

\examples{
#-------------------------------------------------------------#
#-------Generating an object from the class 'Dyadic'--------#
#-------------------------------------------------------------#

# The most generic generation of an object of class 'Dyadic':
D <- new("Dyadic") # a generic format for 'Splinets' object
D
# The SLOTs of 'Dyadic' - the default values
D@height
D@breadth
D@type
D@entries[[1]]
D@aentries

N <- 4
k <- 3 # the height and breadth of a dyadic matrix

# The construction of a horizontally dyadic matrix with height 4 and breadth 3.

E <- list()
for (i in 1:4) {
    E[[i]] <- matrix(1, nrow = (2^(i) - 1) * 3, ncol = 2^(4 - i) * 3)
}


DD <- new("Dyadic", height = N, breadth = k, type = "horiz", entries = E)

DD

# The classic R matrix representation of DD.
mat_DD <- as.matrix(DD)
mat_DD


#-------------------------------------------------------------#
#--------------Transpose of the 'Dyadic' objects--------------#
#-------------------------------------------------------------#

# Construct four types of random dyadic matrices with the same shape.
V <- construct(N, k, type = "vert", distr = "unif")
H <- construct(N, k, type = "horiz", distr = "unif")
S <- construct(N, k, type = "symm", distr = "unif")
AS <- construct(N, k, type = "asymm", distr = "unif")
mat_V <- as.matrix(V)
mat_H <- as.matrix(H)
mat_S <- as.matrix(S)
mat_AS <- as.matrix(AS)

# Transpose of the dyadic object
VT <- t(V)
VT@type # should be 'horiz'
max(abs(as.matrix(VT) - t(mat_V))) # Should be 0

HT <- t(H)
HT@type # should be 'horiz'
max(abs(as.matrix(HT) - t(mat_H))) # Should be 0

ST <- t(S)
ST@type # will still be 'symm'
max(abs(as.matrix(ST) - mat_S)) # Should be 0 due to symmetry

AST <- t(AS)
AST@type # will still be 'asymm'
max(abs(as.matrix(AST) - t(mat_AS))) # Should be 0


#-------------------------------------------------------------#
#-----------Multiplications of the 'Dyadic' objects-----------#
#-------------------------------------------------------------#

# Any pairs of the four types are supported.

# The multiplication of two vertically dyadic matrix,
# which will result in a vertically dyadic matrix
VV <- V \%*\% V
VV@type # Should be "vert"

# The multiplication of a horizontally dyadic matrix with a vertically dyadic one,
# which will result in an asymmetrically dyadic matrix
HV <- H \%*\% V
HV@type # Should be "asymm"

# The multiplication of a horizontally dyadic matrix with a symmetrically dyadic one,
# which will result in an asymmetrically dydaic matrix
HS <- H \%*\% S
HS@type # Should be "asymm"

# The multiplication of a vertically dyadic matrix with a horizontally dyadic one,
# the result is no longer a dyadic object but a dense d x d matrix, where d = k * (2^N - 1)
VH <- V \%*\% H

# The multiplication of a symmetrically dyadic matrix with a symmetrically dyadic one,
# the result is no longer a dyadic object but a dense d x d matrix, where d = k * (2^N - 1)
SS <- S \%*\% S

# The multiplication of a symmetrically dyadic matrix with an asymmetrically dyadic one,
# the result is no longer a dyadic object but a dense d x d matrix, where d = k * (2^N - 1)
SAS <- S \%*\% AS
}
\seealso{
\code{\link{plot,Dyadic-method}} for plotting methods for \code{Dyadic}-objects;
}
