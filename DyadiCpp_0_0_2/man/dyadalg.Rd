% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_dyadalg.R
\name{dyadalg}
\alias{dyadalg}
\title{Efficient factorization of a positive definite symmetrically dyadic
matrix.}
\usage{
dyadalg(D, inv = FALSE)
}
\arguments{
\item{D}{A \code{Dyadic} object of type \code{"symm"} representing a positive
definite symmetrically dyadic matrix;}

\item{inv}{The boolean value indicate whether the inverse of
\eqn{\boldsymbol \Sigma} should be returned.}
}
\value{
If \code{inv == TRUE}, then the inverse of \eqn{\boldsymbol \Sigma},
which is a \code{(2^(height)-1)*breadth x (2^(height)-1)*breadth} classic
matrix, is returned. Otherwise, the vertically \code{Dyadic} object for
\eqn{\mathbf P} is returned.
}
\description{
This function implement the efficient factorization of a
positive definite symmetrically dyadic matrix \eqn{\boldsymbol \Sigma}.
It computes the vertically dyadic matrix \eqn{\mathbf P} such that
\eqn{\mathbf P^\top \boldsymbol \Sigma \mathbf P = \mathbf I}.
}
\details{
This function implement the efficient factorization of a
positive definite symmetrically dyadic matrix.
}
\examples{
#-------------------------------------------------------------#
#---------Inverting a PD symmetrically dyadic matrix----------#
#-------------------------------------------------------------#

N <- 4
k <- 3

# A 48x48 vertically dyadic matrix
V <- construct(N, k, type = "vert", distr = "unif")
# A 48x48 symmetrically dyadic matrix
S <- t(V) \%*\% V
S@type <- "symm"

# Find the vertically dyadic matrix that satisfies P^T S P = I
# using a dyadic factorization algorithm.
P <- dyadalg(S)
I1 <- as.matrix(t(P) \%*\% S \%*\% P)
I <- diag(dim(I1)[1])
max(abs(I1 - I)) # Should be trivially small

# Obtain the inverse of S via the dyadic algorithm
iS <- dyadalg(S, inv = TRUE)
I2 <- iS \%*\% as.matrix(S)
max(abs(I2 - I)) # Should be trivially small
}
\seealso{
\code{\link{Dyadic-class}} for a description of the class;
}
